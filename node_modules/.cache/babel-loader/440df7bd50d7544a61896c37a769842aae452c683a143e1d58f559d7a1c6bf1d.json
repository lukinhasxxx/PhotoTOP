{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.silva\\\\photoTOP-master---refatorado\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [undoImage, setUndoImage] = useState(null);\n  const fileInputRef = useRef(null);\n  const handleFileChange = event => {\n    var _event$target$files;\n    const file = (_event$target$files = event.target.files) === null || _event$target$files === void 0 ? void 0 : _event$target$files[0];\n    if (file) {\n      const reader = new FileReader();\n      reader.onload = e => {\n        var _e$target;\n        const result = (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.result;\n        setImage(result);\n        setUndoImage(null);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const handleUndo = () => {\n    if (undoImage) {\n      setImage(undoImage);\n      setUndoImage(null);\n    }\n  };\n  const handleConvertToGrayScale = () => {\n    if (image) {\n      const canvas = document.createElement('canvas');\n      const context = canvas.getContext('2d');\n      if (context) {\n        const img = new Image();\n        img.onload = () => {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          context.drawImage(img, 0, 0);\n          const imageData = context.getImageData(0, 0, img.width, img.height);\n          const data = imageData.data;\n          for (let i = 0; i < data.length; i += 4) {\n            const brightness = data[i] * 0.2126 + data[i + 1] * 0.7152 + data[i + 2] * 0.0722;\n            data[i] = brightness;\n            data[i + 1] = brightness;\n            data[i + 2] = brightness;\n          }\n          context.putImageData(imageData, 0, 0);\n          const grayscaleImage = canvas.toDataURL();\n          setUndoImage(image);\n          setImage(grayscaleImage);\n        };\n        img.src = image;\n      }\n    }\n  };\n\n  // Função para outras operações como comprimir, converter para bitmap, etc.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        ref: fileInputRef,\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), image && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image,\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 19\n      }, this), undoImage && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUndo,\n        children: \"Undo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleConvertToGrayScale,\n        children: \"Convert to Grayscale\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"y7rBPPG9ekG6kjCCgoUKPzjID6g=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","image","setImage","undoImage","setUndoImage","fileInputRef","handleFileChange","event","_event$target$files","file","target","files","reader","FileReader","onload","e","_e$target","result","readAsDataURL","handleUndo","handleConvertToGrayScale","canvas","document","createElement","context","getContext","img","Image","width","height","drawImage","imageData","getImageData","data","i","length","brightness","putImageData","grayscaleImage","toDataURL","src","className","children","type","ref","onChange","fileName","_jsxFileName","lineNumber","columnNumber","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lucas.silva/photoTOP-master---refatorado/src/App.tsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [undoImage, setUndoImage] = useState<string | null>(null);\r\n  const fileInputRef = useRef<HTMLInputElement>(null);\r\n\r\n  const handleFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = event.target.files?.[0];\r\n    if (file) {\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const result = e.target?.result as string;\r\n        setImage(result);\r\n        setUndoImage(null);\r\n      };\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const handleUndo = () => {\r\n    if (undoImage) {\r\n      setImage(undoImage);\r\n      setUndoImage(null);\r\n    }\r\n  };\r\n\r\n  const handleConvertToGrayScale = () => {\r\n    if (image) {\r\n      const canvas = document.createElement('canvas');\r\n      const context = canvas.getContext('2d');\r\n      if (context) {\r\n        const img = new Image();\r\n        img.onload = () => {\r\n          canvas.width = img.width;\r\n          canvas.height = img.height;\r\n          context.drawImage(img, 0, 0);\r\n          const imageData = context.getImageData(0, 0, img.width, img.height);\r\n          const data = imageData.data;\r\n          for (let i = 0; i < data.length; i += 4) {\r\n            const brightness = data[i] * 0.2126 + data[i + 1] * 0.7152 + data[i + 2] * 0.0722;\r\n            data[i] = brightness;\r\n            data[i + 1] = brightness;\r\n            data[i + 2] = brightness;\r\n          }\r\n          context.putImageData(imageData, 0, 0);\r\n          const grayscaleImage = canvas.toDataURL();\r\n          setUndoImage(image);\r\n          setImage(grayscaleImage);\r\n        };\r\n        img.src = image;\r\n      }\r\n    }\r\n  };\r\n\r\n  // Função para outras operações como comprimir, converter para bitmap, etc.\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <input type=\"file\" ref={fileInputRef} onChange={handleFileChange} />\r\n        {image && <img src={image} alt=\"Uploaded\" />}\r\n        {undoImage && <button onClick={handleUndo}>Undo</button>}\r\n        <button onClick={handleConvertToGrayScale}>Convert to Grayscale</button>\r\n        {/* Botões para outras operações */}\r\n      </header>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}