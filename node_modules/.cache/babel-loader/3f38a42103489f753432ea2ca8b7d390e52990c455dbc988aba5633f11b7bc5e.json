{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.silva\\\\photoTOP-master---refatorado\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [editedImage, setEditedImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const [imageSize, setImageSize] = useState(null);\n  const [uploadedImageResolution, setUploadedImageResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  const uploadedImageRef = useRef(null);\n  const [blurStep, setBlurStep] = useState(0);\n  const [prevBlurSteps, setPrevBlurSteps] = useState([]);\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState(false);\n  const [compressedImage, setCompressedImage] = useState(null);\n  const [prevBitmapImage, setPrevBitmapImage] = useState(null);\n  const [customResolution, setCustomResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const updateImageSize = () => {\n      if (uploadedImageRef.current) {\n        const {\n          width,\n          height\n        } = uploadedImageRef.current;\n        setImageSize({\n          width,\n          height\n        });\n      }\n    };\n    updateImageSize();\n    window.addEventListener('resize', updateImageSize);\n    return () => {\n      window.removeEventListener('resize', updateImageSize);\n    };\n  }, [editedImage, image]);\n  useEffect(() => {\n    if (uploadedImageRef.current && image) {\n      const img = new Image();\n      img.onload = () => {\n        setUploadedImageResolution({\n          width: img.width,\n          height: img.height\n        });\n      };\n      img.src = image;\n    }\n  }, [image]);\n  const handleImageChange = e => {\n    const file = e.target.files && e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (typeof reader.result === 'string') {\n        setImage(reader.result);\n        setOriginalImage(reader.result);\n      }\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const convertToBlackAndWhite = () => {\n    if (uploadedImageRef.current) {\n      if (isBlackAndWhite) {\n        setEditedImage(originalImage);\n        uploadedImageRef.current.src = originalImage;\n      } else {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageResolution.width;\n        canvas.height = uploadedImageResolution.height;\n        ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg;\n          data[i + 1] = avg;\n          data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n      setIsBlackAndWhite(!isBlackAndWhite);\n    }\n  };\n  const rotateImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.height;\n      canvas.height = uploadedImageRef.current.width;\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate(Math.PI / 2);\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.width / 2, -uploadedImageRef.current.height / 2);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const compressImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width / 2;\n      canvas.height = uploadedImageRef.current.height / 2;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n      const editedSrc = canvas.toDataURL();\n      setCompressedImage(editedSrc);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const decompressImage = () => {\n    if (uploadedImageRef.current && compressedImage) {\n      uploadedImageRef.current.src = originalImage;\n      setEditedImage(originalImage);\n      setCompressedImage(null);\n    }\n  };\n  const convertToBitmap = () => {\n    if (uploadedImageRef.current) {\n      if (prevBitmapImage) {\n        // Restore the previous state\n        setEditedImage(originalImage); // Restore the original image\n        uploadedImageRef.current.src = originalImage;\n        setPrevBitmapImage(null);\n      } else {\n        // Save the current state and convert to bitmap\n        setPrevBitmapImage(editedImage || originalImage); // Save the current state\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageResolution.width;\n        canvas.height = uploadedImageResolution.height;\n        ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg < 128 ? 0 : 255;\n          data[i + 1] = avg < 128 ? 0 : 255;\n          data[i + 2] = avg < 128 ? 0 : 255;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n    }\n  };\n  const handleStoreImage = () => {\n    if (uploadedImageRef.current && image) {\n      setImages(prevImages => [...prevImages, {\n        src: image,\n        editedSrc: editedImage\n      }]);\n      setImage(null);\n      setEditedImage(null);\n    }\n  };\n  const mirrorImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const blurOrSharpenImage = amount => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.filter = `blur(${amount}px)`;\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const handleBlurImage = () => {\n    if (uploadedImageRef.current) {\n      blurOrSharpenImage(3);\n      setBlurStep(prevStep => prevStep + 1);\n    }\n  };\n  const handleUnblurImage = () => {\n    if (blurStep > 0) {\n      setBlurStep(prevStep => prevStep - 1);\n      const prevImage = prevBlurSteps.pop();\n      if (prevImage) {\n        setEditedImage(prevImage);\n        uploadedImageRef.current.src = prevImage;\n      }\n    } else {\n      setEditedImage(originalImage);\n      if (originalImage) {\n        uploadedImageRef.current.src = originalImage;\n      }\n    }\n  };\n  const handleCustomResolutionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCustomResolution(prevState => ({\n      ...prevState,\n      [name]: Number(value)\n    }));\n  };\n  const resetResolution = () => {\n    if (originalImage && uploadedImageRef.current) {\n      setCustomResolution({\n        width: uploadedImageResolution.width,\n        height: uploadedImageResolution.height\n      });\n      uploadedImageRef.current.src = originalImage;\n    }\n  };\n  const handleApplyResolution = () => {\n    if (uploadedImageRef.current && originalImage) {\n      const {\n        width,\n        height\n      } = customResolution;\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = width;\n      canvas.height = height;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, width, height);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Original Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        ref: uploadedImageRef,\n        src: image,\n        alt: \"Uploaded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }, this), editedImage && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Edited Image:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: editedImage,\n        alt: \"Edited\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 9\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertToBlackAndWhite,\n        children: isBlackAndWhite ? 'Revert from Black & White' : 'Convert to Black & White'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: convertToBitmap,\n        children: prevBitmapImage ? 'Revert from Bitmap' : 'Convert to Bitmap'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: rotateImage,\n        children: \"Rotate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: mirrorImage,\n        children: \"Mirror\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleBlurImage,\n        children: \"Blur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUnblurImage,\n        children: \"Unblur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: compressImage,\n        children: \"Compress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: decompressImage,\n        children: \"Decompress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Redimensionar para resolu\\xE7\\xE3o personalizada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Largura:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"width\",\n              value: customResolution.width,\n              onChange: handleCustomResolutionChange,\n              placeholder: `Max: ${uploadedImageResolution.width}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Altura:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"height\",\n              value: customResolution.height,\n              onChange: handleCustomResolutionChange,\n              placeholder: `Max: ${uploadedImageResolution.height}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleApplyResolution,\n          children: \"Aplicar resolu\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetResolution,\n          children: \"Resetar resolu\\xE7\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStoreImage,\n        children: \"Store Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stored Images:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stored-images\",\n      children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: img.src,\n          alt: `Stored ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this), img.editedSrc && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img.editedSrc,\n          alt: `Edited ${index}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 31\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 245,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qV2200F83sBhFeGNzxc9eNRWc80=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","image","setImage","images","setImages","editedImage","setEditedImage","originalImage","setOriginalImage","imageSize","setImageSize","uploadedImageResolution","setUploadedImageResolution","width","height","uploadedImageRef","blurStep","setBlurStep","prevBlurSteps","setPrevBlurSteps","isBlackAndWhite","setIsBlackAndWhite","compressedImage","setCompressedImage","prevBitmapImage","setPrevBitmapImage","customResolution","setCustomResolution","updateImageSize","current","window","addEventListener","removeEventListener","img","Image","onload","src","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","convertToBlackAndWhite","canvas","document","createElement","ctx","getContext","drawImage","imageData","getImageData","data","i","length","avg","putImageData","editedSrc","toDataURL","rotateImage","translate","rotate","Math","PI","compressImage","decompressImage","convertToBitmap","handleStoreImage","prevImages","mirrorImage","scale","blurOrSharpenImage","amount","filter","prevSteps","handleBlurImage","prevStep","handleUnblurImage","prevImage","pop","handleCustomResolutionChange","name","value","prevState","Number","resetResolution","handleApplyResolution","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","alt","onClick","placeholder","map","index","_c","$RefreshReg$"],"sources":["C:/Users/lucas.silva/photoTOP-master---refatorado/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, useRef, useMemo, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [images, setImages] = useState<{ src: string; editedSrc?: string | null }[]>([]);\r\n  const [editedImage, setEditedImage] = useState<string | null>(null);\r\n  const [originalImage, setOriginalImage] = useState<string | null>(null);\r\n  const [imageSize, setImageSize] = useState<{ width: number; height: number } | null>(null);\r\n  const [uploadedImageResolution, setUploadedImageResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n  const uploadedImageRef = useRef<HTMLImageElement>(null);\r\n  const [blurStep, setBlurStep] = useState<number>(0);\r\n  const [prevBlurSteps, setPrevBlurSteps] = useState<string[]>([]);\r\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState<boolean>(false);\r\n  const [compressedImage, setCompressedImage] = useState<string | null>(null);\r\n  const [prevBitmapImage, setPrevBitmapImage] = useState<string | null>(null);\r\n  const [customResolution, setCustomResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n\r\n  useEffect(() => {\r\n    const updateImageSize = () => {\r\n      if (uploadedImageRef.current) {\r\n        const { width, height } = uploadedImageRef.current;\r\n        setImageSize({ width, height });\r\n      }\r\n    };\r\n\r\n    updateImageSize();\r\n    window.addEventListener('resize', updateImageSize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateImageSize);\r\n    };\r\n  }, [editedImage, image]);\r\n\r\n  useEffect(() => {\r\n    if (uploadedImageRef.current && image) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setUploadedImageResolution({ width: img.width, height: img.height });\r\n      };\r\n      img.src = image;\r\n    }\r\n  }, [image]);\r\n\r\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      if (typeof reader.result === 'string') {\r\n        setImage(reader.result);\r\n        setOriginalImage(reader.result);\r\n      }\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const convertToBlackAndWhite = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (isBlackAndWhite) {\r\n        setEditedImage(originalImage);\r\n        uploadedImageRef.current.src = originalImage!;\r\n      } else {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageResolution.width;\r\n        canvas.height = uploadedImageResolution.height;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg;\r\n          data[i + 1] = avg;\r\n          data[i + 2] = avg;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n      setIsBlackAndWhite(!isBlackAndWhite);\r\n    }\r\n  };\r\n\r\n  const rotateImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.height;\r\n      canvas.height = uploadedImageRef.current.width;\r\n      ctx.translate(canvas.width / 2, canvas.height / 2);\r\n      ctx.rotate(Math.PI / 2);\r\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.width / 2, -uploadedImageRef.current.height / 2);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const compressImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width / 2;\r\n      canvas.height = uploadedImageRef.current.height / 2;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setCompressedImage(editedSrc);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const decompressImage = () => {\r\n    if (uploadedImageRef.current && compressedImage) {\r\n      uploadedImageRef.current.src = originalImage!;\r\n      setEditedImage(originalImage);\r\n      setCompressedImage(null);\r\n    }\r\n  };\r\n\r\n  const convertToBitmap = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (prevBitmapImage) {\r\n        // Restore the previous state\r\n        setEditedImage(originalImage); // Restore the original image\r\n        uploadedImageRef.current.src = originalImage!;\r\n        setPrevBitmapImage(null);\r\n      } else {\r\n        // Save the current state and convert to bitmap\r\n        setPrevBitmapImage(editedImage || originalImage); // Save the current state\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageResolution.width;\r\n        canvas.height = uploadedImageResolution.height;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg < 128 ? 0 : 255;\r\n          data[i + 1] = avg < 128 ? 0 : 255;\r\n          data[i + 2] = avg < 128 ? 0 : 255;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStoreImage = () => {\r\n    if (uploadedImageRef.current && image) {\r\n      setImages(prevImages => [...prevImages, { src: image, editedSrc: editedImage }]);\r\n      setImage(null);\r\n      setEditedImage(null);\r\n    }\r\n  };\r\n\r\n  const mirrorImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.translate(canvas.width, 0);\r\n      ctx.scale(-1, 1);\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const blurOrSharpenImage = (amount: number) => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.filter = `blur(${amount}px)`;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const handleBlurImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      blurOrSharpenImage(3);\r\n      setBlurStep(prevStep => prevStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleUnblurImage = () => {\r\n    if (blurStep > 0) {\r\n      setBlurStep(prevStep => prevStep - 1);\r\n      const prevImage = prevBlurSteps.pop();\r\n      if (prevImage) {\r\n        setEditedImage(prevImage);\r\n        uploadedImageRef.current!.src = prevImage;\r\n      }\r\n    } else {\r\n      setEditedImage(originalImage);\r\n      if (originalImage) {\r\n        uploadedImageRef.current!.src = originalImage;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCustomResolutionChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setCustomResolution(prevState => ({ ...prevState, [name]: Number(value) }));\r\n  };\r\n\r\n  const resetResolution = () => {\r\n    if (originalImage && uploadedImageRef.current) {\r\n      setCustomResolution({ width: uploadedImageResolution.width, height: uploadedImageResolution.height });\r\n      uploadedImageRef.current.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const handleApplyResolution = () => {\r\n    if (uploadedImageRef.current && originalImage) {\r\n      const { width, height } = customResolution;\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = width;\r\n      canvas.height = height;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, width, height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Image Editor</h1>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      {image && (\r\n        <div>\r\n          <h2>Original Image:</h2>\r\n          <img ref={uploadedImageRef} src={image} alt=\"Uploaded\" />\r\n        </div>\r\n      )}\r\n      {editedImage && (\r\n        <div>\r\n          <h2>Edited Image:</h2>\r\n          <img src={editedImage} alt=\"Edited\" />\r\n        </div>\r\n      )}\r\n      {image && (\r\n        <div>\r\n          <button onClick={convertToBlackAndWhite}>\r\n            {isBlackAndWhite ? 'Revert from Black & White' : 'Convert to Black & White'}\r\n          </button>\r\n          <button onClick={convertToBitmap}>\r\n            {prevBitmapImage ? 'Revert from Bitmap' : 'Convert to Bitmap'}\r\n          </button>\r\n          <button onClick={rotateImage}>Rotate</button>\r\n          <button onClick={mirrorImage}>Mirror</button>\r\n          <button onClick={handleBlurImage}>Blur</button>\r\n          <button onClick={handleUnblurImage}>Unblur</button>\r\n          <button onClick={compressImage}>Compress</button>\r\n          <button onClick={decompressImage}>Decompress</button>\r\n          <div>\r\n            <h3>Redimensionar para resolução personalizada</h3>\r\n            <div>\r\n              <label>\r\n                Largura:\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"width\"\r\n                  value={customResolution.width}\r\n                  onChange={handleCustomResolutionChange}\r\n                  placeholder={`Max: ${uploadedImageResolution.width}`}\r\n                />\r\n              </label>\r\n              <label>\r\n                Altura:\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"height\"\r\n                  value={customResolution.height}\r\n                  onChange={handleCustomResolutionChange}\r\n                  placeholder={`Max: ${uploadedImageResolution.height}`}\r\n                />\r\n              </label>\r\n            </div>\r\n            <button onClick={handleApplyResolution}>Aplicar resolução</button>\r\n            <button onClick={resetResolution}>Resetar resolução</button>\r\n          </div>\r\n          <button onClick={handleStoreImage}>Store Image</button>\r\n        </div>\r\n      )}\r\n      <h2>Stored Images:</h2>\r\n      <div className=\"stored-images\">\r\n        {images.map((img, index) => (\r\n          <div key={index}>\r\n            <img src={img.src} alt={`Stored ${index}`} />\r\n            {img.editedSrc && <img src={img.editedSrc} alt={`Edited ${index}`} />}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}