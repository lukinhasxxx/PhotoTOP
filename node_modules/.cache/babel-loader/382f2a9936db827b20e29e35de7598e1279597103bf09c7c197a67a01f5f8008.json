{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.silva\\\\photoTOP-master---refatorado\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [editedImage, setEditedImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null); // State para armazenar a imagem original\n  const uploadedImageRef = useRef(null);\n  const [blurSteps, setBlurSteps] = useState([]); // Lista para armazenar os estados de imagem após o borramento\n\n  const handleImageChange = e => {\n    const file = e.target.files && e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (typeof reader.result === 'string') {\n        setImage(reader.result);\n        setOriginalImage(reader.result); // Define a imagem original quando é carregada\n      }\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const applyBlur = amount => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.filter = `blur(${amount}px)`;\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setBlurSteps(prevSteps => [...prevSteps, editedSrc]); // Adiciona o estado da imagem após o borramento à lista\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const handleBlurImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setOriginalImage(editedSrc); // Salva a imagem atual como original antes de aplicar o borramento\n      applyBlur(3); // Altere o valor de acordo com a quantidade de desfoque desejada\n    }\n  };\n  const handleUnblurImage = () => {\n    if (blurSteps.length > 0) {\n      // Remove o último estado da lista\n      const prevImageSrc = blurSteps.pop();\n      if (prevImageSrc) {\n        setEditedImage(prevImageSrc); // Restaura o estado anterior da imagem\n      }\n    } else if (editedImage && originalImage) {\n      setEditedImage(originalImage); // Restaura a imagem original\n    }\n  };\n\n  // Restante do código permanece igual...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      background: 'linear-gradient(to right, #4e54c8, #8f94fb)',\n      width: '100vw',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n        textAlign: 'center',\n        width: '80%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imageInput\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        className: \"image-container\",\n        children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: uploadedImageRef,\n          src: editedImage || image,\n          alt: \"Uploaded Image\",\n          id: \"uploadedImage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '20px'\n        },\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleBlurImage,\n          children: \"Borrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleUnblurImage,\n          children: \"Desborrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center'\n        },\n        children: imageList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"53X20zjJ1vlEe2Ps17D/hUjZjI8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","App","_s","image","setImage","images","setImages","editedImage","setEditedImage","originalImage","setOriginalImage","uploadedImageRef","blurSteps","setBlurSteps","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","applyBlur","amount","current","canvas","document","createElement","ctx","getContext","width","height","filter","drawImage","editedSrc","toDataURL","prevSteps","src","handleBlurImage","handleUnblurImage","length","prevImageSrc","pop","style","fontFamily","margin","display","justifyContent","alignItems","minHeight","background","overflow","children","backgroundColor","padding","borderRadius","boxShadow","textAlign","type","id","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","className","ref","alt","onClick","flexWrap","imageList","_c","$RefreshReg$"],"sources":["C:/Users/lucas.silva/photoTOP-master---refatorado/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, useRef, useMemo } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [images, setImages] = useState<{ src: string; editedSrc?: string | null }[]>([]);\r\n  const [editedImage, setEditedImage] = useState<string | null>(null);\r\n  const [originalImage, setOriginalImage] = useState<string | null>(null); // State para armazenar a imagem original\r\n  const uploadedImageRef = useRef<HTMLImageElement>(null);\r\n  const [blurSteps, setBlurSteps] = useState<string[]>([]); // Lista para armazenar os estados de imagem após o borramento\r\n\r\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      if (typeof reader.result === 'string') {\r\n        setImage(reader.result);\r\n        setOriginalImage(reader.result); // Define a imagem original quando é carregada\r\n      }\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const applyBlur = (amount: number) => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.filter = `blur(${amount}px)`;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setBlurSteps(prevSteps => [...prevSteps, editedSrc]); // Adiciona o estado da imagem após o borramento à lista\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const handleBlurImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setOriginalImage(editedSrc); // Salva a imagem atual como original antes de aplicar o borramento\r\n      applyBlur(3); // Altere o valor de acordo com a quantidade de desfoque desejada\r\n    }\r\n  };\r\n\r\n  const handleUnblurImage = () => {\r\n    if (blurSteps.length > 0) {\r\n      // Remove o último estado da lista\r\n      const prevImageSrc = blurSteps.pop(); \r\n      if (prevImageSrc) {\r\n        setEditedImage(prevImageSrc); // Restaura o estado anterior da imagem\r\n      }\r\n    } else if (editedImage && originalImage) {\r\n      setEditedImage(originalImage); // Restaura a imagem original\r\n    }\r\n  };\r\n\r\n  // Restante do código permanece igual...\r\n\r\n  return (\r\n    <div style={{\r\n      fontFamily: 'Arial, sans-serif',\r\n      margin: 0,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(to right, #4e54c8, #8f94fb)',\r\n      width: '100vw',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        textAlign: 'center',\r\n        width: '80%'\r\n      }}>\r\n        <input type=\"file\" id=\"imageInput\" accept=\"image/*\" onChange={handleImageChange} />\r\n        <div style={{ marginBottom: '20px' }} className=\"image-container\">\r\n          {image && <img ref={uploadedImageRef} src={editedImage || image} alt=\"Uploaded Image\" id=\"uploadedImage\" />}\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }} className=\"controls\">\r\n          {/* Restante dos botões */}\r\n          <button className=\"button\" onClick={handleBlurImage}>Borrar</button>\r\n          <button className=\"button\" onClick={handleUnblurImage}>Desborrar</button>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n          {imageList}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}