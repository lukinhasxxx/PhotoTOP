{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.silva\\\\photoTOP-master---refatorado\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [editedImage, setEditedImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const [imageSize, setImageSize] = useState(null);\n  const [uploadedImageResolution, setUploadedImageResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  const uploadedImageRef = useRef(null);\n  const [blurStep, setBlurStep] = useState(0);\n  const [prevBlurSteps, setPrevBlurSteps] = useState([]);\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState(false);\n  const [compressedImage, setCompressedImage] = useState(null);\n  const [prevBitmapImage, setPrevBitmapImage] = useState(null);\n  const [customResolution, setCustomResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const updateImageSize = () => {\n      if (uploadedImageRef.current) {\n        const {\n          width,\n          height\n        } = uploadedImageRef.current;\n        setImageSize({\n          width,\n          height\n        });\n      }\n    };\n    updateImageSize();\n    window.addEventListener('resize', updateImageSize);\n    return () => {\n      window.removeEventListener('resize', updateImageSize);\n    };\n  }, [editedImage, image]);\n  useEffect(() => {\n    if (uploadedImageRef.current && image) {\n      const img = new Image();\n      img.onload = () => {\n        setUploadedImageResolution({\n          width: img.width,\n          height: img.height\n        });\n      };\n      img.src = image;\n    }\n  }, [image]);\n  const handleImageChange = e => {\n    const file = e.target.files && e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (typeof reader.result === 'string') {\n        setImage(reader.result);\n        setOriginalImage(reader.result);\n      }\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const convertToBlackAndWhite = () => {\n    if (uploadedImageRef.current) {\n      if (isBlackAndWhite) {\n        setEditedImage(originalImage);\n        uploadedImageRef.current.src = originalImage;\n      } else {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageRef.current.width;\n        canvas.height = uploadedImageRef.current.height;\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg;\n          data[i + 1] = avg;\n          data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n      setIsBlackAndWhite(!isBlackAndWhite);\n    }\n  };\n  const rotateImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.height;\n      canvas.height = uploadedImageRef.current.width;\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate(Math.PI / 2);\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.width / 2, -uploadedImageRef.current.height / 2);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const compressImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width / 2;\n      canvas.height = uploadedImageRef.current.height / 2;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n      const editedSrc = canvas.toDataURL();\n      setCompressedImage(editedSrc);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const decompressImage = () => {\n    if (uploadedImageRef.current && compressedImage) {\n      uploadedImageRef.current.src = originalImage;\n      setEditedImage(originalImage);\n      setCompressedImage(null);\n    }\n  };\n  const convertToBitmap = () => {\n    if (uploadedImageRef.current) {\n      if (prevBitmapImage) {\n        // Restore the previous state\n        setEditedImage(originalImage); // Restore the original image\n        uploadedImageRef.current.src = originalImage;\n        setPrevBitmapImage(null);\n      } else {\n        // Save the current state and convert to bitmap\n        setPrevBitmapImage(editedImage || originalImage); // Save the current state\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageRef.current.width;\n        canvas.height = uploadedImageRef.current.height;\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg < 128 ? 0 : 255;\n          data[i + 1] = avg < 128 ? 0 : 255;\n          data[i + 2] = avg < 128 ? 0 : 255;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n    }\n  };\n  const handleStoreImage = () => {\n    if (uploadedImageRef.current && image) {\n      setImages(prevImages => [...prevImages, {\n        src: image,\n        editedSrc: editedImage\n      }]);\n      setImage(null);\n      setEditedImage(null);\n    }\n  };\n  const mirrorImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const blurOrSharpenImage = amount => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.filter = `blur(${amount}px)`;\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const handleBlurImage = () => {\n    if (uploadedImageRef.current) {\n      blurOrSharpenImage(3);\n      setBlurStep(prevStep => prevStep + 1);\n    }\n  };\n  const handleUnblurImage = () => {\n    if (blurStep > 0) {\n      setBlurStep(prevStep => prevStep - 1);\n      const prevImage = prevBlurSteps.pop();\n      if (prevImage) {\n        setEditedImage(prevImage);\n        uploadedImageRef.current.src = prevImage;\n      }\n    } else {\n      setEditedImage(originalImage);\n      if (originalImage) {\n        uploadedImageRef.current.src = originalImage;\n      }\n    }\n  };\n  const handleCustomResolutionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCustomResolution(prevResolution => ({\n      ...prevResolution,\n      [name]: Number(value)\n    }));\n  };\n  const applyCustomResolution = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = customResolution.width;\n      canvas.height = customResolution.height;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Image Editor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleImageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        ref: uploadedImageRef,\n        src: image,\n        alt: \"Uploaded\",\n        className: \"uploaded-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Original Resolution: \", uploadedImageResolution.width, \" x \", uploadedImageResolution.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Displayed Image Size: \", imageSize === null || imageSize === void 0 ? void 0 : imageSize.width, \" x \", imageSize === null || imageSize === void 0 ? void 0 : imageSize.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Custom Width:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"width\",\n              value: customResolution.width,\n              onChange: handleCustomResolutionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Custom Height:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"height\",\n              value: customResolution.height,\n              onChange: handleCustomResolutionChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: applyCustomResolution,\n            children: \"Apply Custom Resolution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBlurImage,\n          children: \"Blur Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUnblurImage,\n          children: \"Unblur Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: rotateImage,\n          children: \"Rotate Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: mirrorImage,\n          children: \"Mirror Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: convertToBlackAndWhite,\n          children: \"Black & White\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: compressImage,\n          children: \"Compress Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: decompressImage,\n          children: \"Decompress Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: convertToBitmap,\n          children: \"Convert to Bitmap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStoreImage,\n          children: \"Store Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 9\n    }, this), images.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-gallery\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Stored Images\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-list\",\n        children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-item\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: img.editedSrc || img.src,\n            alt: `Stored ${index}`,\n            className: \"stored-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 240,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qV2200F83sBhFeGNzxc9eNRWc80=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","image","setImage","images","setImages","editedImage","setEditedImage","originalImage","setOriginalImage","imageSize","setImageSize","uploadedImageResolution","setUploadedImageResolution","width","height","uploadedImageRef","blurStep","setBlurStep","prevBlurSteps","setPrevBlurSteps","isBlackAndWhite","setIsBlackAndWhite","compressedImage","setCompressedImage","prevBitmapImage","setPrevBitmapImage","customResolution","setCustomResolution","updateImageSize","current","window","addEventListener","removeEventListener","img","Image","onload","src","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","convertToBlackAndWhite","canvas","document","createElement","ctx","getContext","drawImage","imageData","getImageData","data","i","length","avg","putImageData","editedSrc","toDataURL","rotateImage","translate","rotate","Math","PI","compressImage","decompressImage","convertToBitmap","handleStoreImage","prevImages","mirrorImage","scale","blurOrSharpenImage","amount","filter","prevSteps","handleBlurImage","prevStep","handleUnblurImage","prevImage","pop","handleCustomResolutionChange","name","value","prevResolution","Number","applyCustomResolution","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","ref","alt","onClick","map","index","_c","$RefreshReg$"],"sources":["C:/Users/lucas.silva/photoTOP-master---refatorado/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, useRef, useMemo, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [images, setImages] = useState<{ src: string; editedSrc?: string | null }[]>([]);\r\n  const [editedImage, setEditedImage] = useState<string | null>(null);\r\n  const [originalImage, setOriginalImage] = useState<string | null>(null);\r\n  const [imageSize, setImageSize] = useState<{ width: number; height: number } | null>(null);\r\n  const [uploadedImageResolution, setUploadedImageResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n  const uploadedImageRef = useRef<HTMLImageElement>(null);\r\n  const [blurStep, setBlurStep] = useState<number>(0);\r\n  const [prevBlurSteps, setPrevBlurSteps] = useState<string[]>([]);\r\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState<boolean>(false);\r\n  const [compressedImage, setCompressedImage] = useState<string | null>(null);\r\n  const [prevBitmapImage, setPrevBitmapImage] = useState<string | null>(null);\r\n  const [customResolution, setCustomResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n\r\n  useEffect(() => {\r\n    const updateImageSize = () => {\r\n      if (uploadedImageRef.current) {\r\n        const { width, height } = uploadedImageRef.current;\r\n        setImageSize({ width, height });\r\n      }\r\n    };\r\n\r\n    updateImageSize();\r\n    window.addEventListener('resize', updateImageSize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateImageSize);\r\n    };\r\n  }, [editedImage, image]);\r\n\r\n  useEffect(() => {\r\n    if (uploadedImageRef.current && image) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setUploadedImageResolution({ width: img.width, height: img.height });\r\n      };\r\n      img.src = image;\r\n    }\r\n  }, [image]);\r\n\r\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      if (typeof reader.result === 'string') {\r\n        setImage(reader.result);\r\n        setOriginalImage(reader.result);\r\n      }\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const convertToBlackAndWhite = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (isBlackAndWhite) {\r\n        setEditedImage(originalImage);\r\n        uploadedImageRef.current.src = originalImage!;\r\n      } else {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageRef.current.width;\r\n        canvas.height = uploadedImageRef.current.height;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg;\r\n          data[i + 1] = avg;\r\n          data[i + 2] = avg;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n      setIsBlackAndWhite(!isBlackAndWhite);\r\n    }\r\n  };\r\n\r\n  const rotateImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.height;\r\n      canvas.height = uploadedImageRef.current.width;\r\n      ctx.translate(canvas.width / 2, canvas.height / 2);\r\n      ctx.rotate(Math.PI / 2);\r\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.width / 2, -uploadedImageRef.current.height / 2);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const compressImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width / 2;\r\n      canvas.height = uploadedImageRef.current.height / 2;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setCompressedImage(editedSrc);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const decompressImage = () => {\r\n    if (uploadedImageRef.current && compressedImage) {\r\n      uploadedImageRef.current.src = originalImage!;\r\n      setEditedImage(originalImage);\r\n      setCompressedImage(null);\r\n    }\r\n  };\r\n\r\n  const convertToBitmap = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (prevBitmapImage) {\r\n        // Restore the previous state\r\n        setEditedImage(originalImage); // Restore the original image\r\n        uploadedImageRef.current.src = originalImage!;\r\n        setPrevBitmapImage(null);\r\n      } else {\r\n        // Save the current state and convert to bitmap\r\n        setPrevBitmapImage(editedImage || originalImage); // Save the current state\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageRef.current.width;\r\n        canvas.height = uploadedImageRef.current.height;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg < 128 ? 0 : 255;\r\n          data[i + 1] = avg < 128 ? 0 : 255;\r\n          data[i + 2] = avg < 128 ? 0 : 255;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStoreImage = () => {\r\n    if (uploadedImageRef.current && image) {\r\n      setImages(prevImages => [...prevImages, { src: image, editedSrc: editedImage }]);\r\n      setImage(null);\r\n      setEditedImage(null);\r\n    }\r\n  };\r\n\r\n  const mirrorImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.translate(canvas.width, 0);\r\n      ctx.scale(-1, 1);\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const blurOrSharpenImage = (amount: number) => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.filter = `blur(${amount}px)`;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const handleBlurImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      blurOrSharpenImage(3);\r\n      setBlurStep(prevStep => prevStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleUnblurImage = () => {\r\n    if (blurStep > 0) {\r\n      setBlurStep(prevStep => prevStep - 1);\r\n      const prevImage = prevBlurSteps.pop();\r\n      if (prevImage) {\r\n        setEditedImage(prevImage);\r\n        uploadedImageRef.current!.src = prevImage;\r\n      }\r\n    } else {\r\n      setEditedImage(originalImage);\r\n      if (originalImage) {\r\n        uploadedImageRef.current!.src = originalImage;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleCustomResolutionChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setCustomResolution(prevResolution => ({\r\n      ...prevResolution,\r\n      [name]: Number(value),\r\n    }));\r\n  };\r\n\r\n  const applyCustomResolution = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = customResolution.width;\r\n      canvas.height = customResolution.height;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Image Editor</h1>\r\n      <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n      {image && (\r\n        <div>\r\n          <img ref={uploadedImageRef} src={image} alt=\"Uploaded\" className=\"uploaded-image\" />\r\n          <div>\r\n            <p>\r\n              Original Resolution: {uploadedImageResolution.width} x {uploadedImageResolution.height}\r\n            </p>\r\n            <p>\r\n              Displayed Image Size: {imageSize?.width} x {imageSize?.height}\r\n            </p>\r\n            <div>\r\n              <label>\r\n                Custom Width:\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"width\"\r\n                  value={customResolution.width}\r\n                  onChange={handleCustomResolutionChange}\r\n                />\r\n              </label>\r\n              <label>\r\n                Custom Height:\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"height\"\r\n                  value={customResolution.height}\r\n                  onChange={handleCustomResolutionChange}\r\n                />\r\n              </label>\r\n              <button onClick={applyCustomResolution}>Apply Custom Resolution</button>\r\n            </div>\r\n            <button onClick={handleBlurImage}>Blur Image</button>\r\n            <button onClick={handleUnblurImage}>Unblur Image</button>\r\n            <button onClick={rotateImage}>Rotate Image</button>\r\n            <button onClick={mirrorImage}>Mirror Image</button>\r\n            <button onClick={convertToBlackAndWhite}>Black & White</button>\r\n            <button onClick={compressImage}>Compress Image</button>\r\n            <button onClick={decompressImage}>Decompress Image</button>\r\n            <button onClick={convertToBitmap}>Convert to Bitmap</button>\r\n            <button onClick={handleStoreImage}>Store Image</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {images.length > 0 && (\r\n        <div className=\"image-gallery\">\r\n          <h2>Stored Images</h2>\r\n          <div className=\"image-list\">\r\n            {images.map((img, index) => (\r\n              <div key={index} className=\"image-item\">\r\n                <img src={img.editedSrc || img.src} alt={`Stored ${index}`} className=\"stored-image\" />\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}