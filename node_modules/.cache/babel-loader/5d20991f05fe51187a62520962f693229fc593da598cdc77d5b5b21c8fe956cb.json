{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.silva\\\\photoTOP-master---refatorado\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useMemo } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [editedImage, setEditedImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null); // Adicionamos um estado para a imagem original\n  const uploadedImageRef = useRef(null);\n  const [prevBlurImage, setPrevBlurImage] = useState(null);\n  const handleImageChange = e => {\n    const file = e.target.files && e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (typeof reader.result === 'string') {\n        setImage(reader.result);\n        setOriginalImage(reader.result); // Salvamos a imagem original quando é carregada\n        setEditedImage(reader.result); // Inicialmente, a imagem editada é a mesma que a original\n      }\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const convertToBlackAndWhite = () => {\n    if (originalImage) {\n      const tempImage = new Image();\n      tempImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = tempImage.width;\n        canvas.height = tempImage.height;\n        ctx.drawImage(tempImage, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg;\n          data[i + 1] = avg;\n          data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n      };\n      tempImage.src = originalImage;\n    }\n  };\n  const rotateImage = () => {\n    if (originalImage) {\n      const tempImage = new Image();\n      tempImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = tempImage.height;\n        canvas.height = tempImage.width;\n        ctx.translate(canvas.width / 2, canvas.height / 2);\n        ctx.rotate(Math.PI / 2);\n        ctx.drawImage(tempImage, -tempImage.width / 2, -tempImage.height / 2);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n      };\n      tempImage.src = originalImage;\n    }\n  };\n  const compressImage = () => {\n    if (originalImage) {\n      const tempImage = new Image();\n      tempImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = tempImage.width / 2;\n        canvas.height = tempImage.height / 2;\n        ctx.drawImage(tempImage, 0, 0, canvas.width, canvas.height);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n      };\n      tempImage.src = originalImage;\n    }\n  };\n  const convertToBitmap = () => {\n    if (originalImage) {\n      const tempImage = new Image();\n      tempImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = tempImage.width;\n        canvas.height = tempImage.height;\n        ctx.drawImage(tempImage, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg < 128 ? 0 : 255;\n          data[i + 1] = avg < 128 ? 0 : 255;\n          data[i + 2] = avg < 128 ? 0 : 255;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n      };\n      tempImage.src = originalImage;\n    }\n  };\n  const handleStoreImage = () => {\n    if (uploadedImageRef.current && image) {\n      setImages(prevImages => [...prevImages, {\n        src: image,\n        editedSrc: editedImage\n      }]);\n      setImage(null);\n      setEditedImage(null);\n    }\n  };\n  const mirrorImage = () => {\n    if (originalImage) {\n      const tempImage = new Image();\n      tempImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = tempImage.width;\n        canvas.height = tempImage.height;\n        ctx.translate(canvas.width, 0);\n        ctx.scale(-1, 1);\n        ctx.drawImage(tempImage, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n      };\n      tempImage.src = originalImage;\n    }\n  };\n  const blurOrSharpenImage = amount => {\n    if (originalImage) {\n      const tempImage = new Image();\n      tempImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = tempImage.width;\n        canvas.height = tempImage.height;\n        ctx.filter = `blur(${amount}px)`;\n        ctx.drawImage(tempImage, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n      };\n      tempImage.src = originalImage;\n    }\n  };\n  const handleBlurImage = () => {\n    if (originalImage) {\n      blurOrSharpenImage(3); // Aplica o borramento\n    }\n  };\n  const handleUnblurImage = () => {\n    if (prevBlurImage) {\n      setEditedImage(prevBlurImage); // Restaura a imagem anterior ao borramento\n    }\n  };\n  const handleDownloadImage = () => {\n    if (originalImage) {\n      // Aplicar as modificações na imagem original antes de baixar\n      const tempImage = new Image();\n      tempImage.onload = () => {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = tempImage.width;\n        canvas.height = tempImage.height;\n        ctx.drawImage(tempImage, 0, 0);\n        // Adicione aqui as modificações desejadas (editedImage)\n        // ctx.filter = `blur(3px)`; // Exemplo de aplicação de borramento\n        // ctx.drawImage(tempImage, 0, 0);\n        // ----------------------------------------------\n        const editedSrc = canvas.toDataURL();\n        const link = document.createElement('a');\n        link.href = editedSrc;\n        link.download = 'edited_image.png';\n        document.body.appendChild(link);\n        link.click();\n        document.body.removeChild(link);\n      };\n      tempImage.src = originalImage;\n    }\n  };\n  const imageList = useMemo(() => images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n    src: img.editedSrc || img.src,\n    alt: `Uploaded Image ${index}`,\n    style: {\n      maxWidth: '100%',\n      maxHeight: '100vh',\n      margin: '5px',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setImage(img.src);\n      setEditedImage(img.editedSrc || null);\n    }\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 7\n  }, this)), [images]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      background: 'linear-gradient(to right, #4e54c8, #8f94fb)',\n      width: '100vw',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n        textAlign: 'center',\n        width: '80%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imageInput\",\n        accept: \"image/*\",\n        onChange: handleImageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px'\n        },\n        className: \"image-container\",\n        children: image && /*#__PURE__*/_jsxDEV(\"img\", {\n          ref: uploadedImageRef,\n          src: editedImage || image,\n          alt: \"Uploaded Image\",\n          id: \"uploadedImage\",\n          style: {\n            maxWidth: '100%',\n            maxHeight: '80vh'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '20px'\n        },\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: convertToBlackAndWhite,\n          children: \"Preto e Branco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: rotateImage,\n          children: \"Girar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: compressImage,\n          children: \"Comprimir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: convertToBitmap,\n          children: \"Bitmap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleStoreImage,\n          children: \"Salvar Imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: mirrorImage,\n          children: \"Espelhar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleBlurImage,\n          children: \"Borrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleUnblurImage,\n          children: \"Desborrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleDownloadImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center'\n        },\n        children: imageList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"yIVV7PURlvfmidpABnB9BvzIXC0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useMemo","jsxDEV","_jsxDEV","App","_s","image","setImage","images","setImages","editedImage","setEditedImage","originalImage","setOriginalImage","uploadedImageRef","prevBlurImage","setPrevBlurImage","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","convertToBlackAndWhite","tempImage","Image","onload","canvas","document","createElement","ctx","getContext","width","height","drawImage","imageData","getImageData","data","i","length","avg","putImageData","editedSrc","toDataURL","src","rotateImage","translate","rotate","Math","PI","compressImage","convertToBitmap","handleStoreImage","current","prevImages","mirrorImage","scale","blurOrSharpenImage","amount","filter","handleBlurImage","handleUnblurImage","handleDownloadImage","link","href","download","body","appendChild","click","removeChild","imageList","map","img","index","alt","style","maxWidth","maxHeight","margin","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","fontFamily","display","justifyContent","alignItems","minHeight","background","overflow","children","backgroundColor","padding","borderRadius","boxShadow","textAlign","type","id","accept","onChange","marginBottom","className","ref","flexWrap","_c","$RefreshReg$"],"sources":["C:/Users/lucas.silva/photoTOP-master---refatorado/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, useRef, useMemo } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [images, setImages] = useState<{ src: string; editedSrc?: string | null }[]>([]);\r\n  const [editedImage, setEditedImage] = useState<string | null>(null);\r\n  const [originalImage, setOriginalImage] = useState<string | null>(null); // Adicionamos um estado para a imagem original\r\n  const uploadedImageRef = useRef<HTMLImageElement>(null);\r\n  const [prevBlurImage, setPrevBlurImage] = useState<string | null>(null); \r\n\r\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      if (typeof reader.result === 'string') {\r\n        setImage(reader.result);\r\n        setOriginalImage(reader.result); // Salvamos a imagem original quando é carregada\r\n        setEditedImage(reader.result); // Inicialmente, a imagem editada é a mesma que a original\r\n      }\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const convertToBlackAndWhite = () => {\r\n    if (originalImage) {\r\n      const tempImage = new Image();\r\n      tempImage.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = tempImage.width;\r\n        canvas.height = tempImage.height;\r\n        ctx.drawImage(tempImage, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg;\r\n          data[i + 1] = avg;\r\n          data[i + 2] = avg;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n      };\r\n      tempImage.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const rotateImage = () => {\r\n    if (originalImage) {\r\n      const tempImage = new Image();\r\n      tempImage.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = tempImage.height;\r\n        canvas.height = tempImage.width;\r\n        ctx.translate(canvas.width / 2, canvas.height / 2);\r\n        ctx.rotate(Math.PI / 2);\r\n        ctx.drawImage(tempImage, -tempImage.width / 2, -tempImage.height / 2);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n      };\r\n      tempImage.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const compressImage = () => {\r\n    if (originalImage) {\r\n      const tempImage = new Image();\r\n      tempImage.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = tempImage.width / 2;\r\n        canvas.height = tempImage.height / 2;\r\n        ctx.drawImage(tempImage, 0, 0, canvas.width, canvas.height);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n      };\r\n      tempImage.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const convertToBitmap = () => {\r\n    if (originalImage) {\r\n      const tempImage = new Image();\r\n      tempImage.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = tempImage.width;\r\n        canvas.height = tempImage.height;\r\n        ctx.drawImage(tempImage, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg < 128 ? 0 : 255;\r\n          data[i + 1] = avg < 128 ? 0 : 255;\r\n          data[i + 2] = avg < 128 ? 0 : 255;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n      };\r\n      tempImage.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const handleStoreImage = () => {\r\n    if (uploadedImageRef.current && image) {\r\n      setImages(prevImages => [...prevImages, { src: image, editedSrc: editedImage }]);\r\n      setImage(null);\r\n      setEditedImage(null);\r\n    }\r\n  };\r\n\r\n  const mirrorImage = () => {\r\n    if (originalImage) {\r\n      const tempImage = new Image();\r\n      tempImage.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = tempImage.width;\r\n        canvas.height = tempImage.height;\r\n        ctx.translate(canvas.width, 0);\r\n        ctx.scale(-1, 1);\r\n        ctx.drawImage(tempImage, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n      };\r\n      tempImage.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const blurOrSharpenImage = (amount: number) => {\r\n    if (originalImage) {\r\n      const tempImage = new Image();\r\n      tempImage.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = tempImage.width;\r\n        canvas.height = tempImage.height;\r\n        ctx.filter = `blur(${amount}px)`;\r\n        ctx.drawImage(tempImage, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n      };\r\n      tempImage.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const handleBlurImage = () => {\r\n    if (originalImage) {\r\n      blurOrSharpenImage(3); // Aplica o borramento\r\n    }\r\n  };\r\n\r\n  const handleUnblurImage = () => {\r\n    if (prevBlurImage) {\r\n      setEditedImage(prevBlurImage); // Restaura a imagem anterior ao borramento\r\n    }\r\n  };\r\n\r\n  const handleDownloadImage = () => {\r\n    if (originalImage) {\r\n      // Aplicar as modificações na imagem original antes de baixar\r\n      const tempImage = new Image();\r\n      tempImage.onload = () => {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = tempImage.width;\r\n        canvas.height = tempImage.height;\r\n        ctx.drawImage(tempImage, 0, 0);\r\n        // Adicione aqui as modificações desejadas (editedImage)\r\n        // ctx.filter = `blur(3px)`; // Exemplo de aplicação de borramento\r\n        // ctx.drawImage(tempImage, 0, 0);\r\n        // ----------------------------------------------\r\n        const editedSrc = canvas.toDataURL();\r\n        const link = document.createElement('a');\r\n        link.href = editedSrc;\r\n        link.download = 'edited_image.png';\r\n        document.body.appendChild(link);\r\n        link.click();\r\n        document.body.removeChild(link);\r\n      };\r\n      tempImage.src = originalImage;\r\n    }\r\n  };\r\n\r\n  const imageList = useMemo(\r\n    () => images.map((img, index) => (\r\n      <img\r\n        key={index}\r\n        src={img.editedSrc || img.src}\r\n        alt={`Uploaded Image ${index}`}\r\n        style={{ maxWidth: '100%', maxHeight: '100vh', margin: '5px', cursor: 'pointer' }}\r\n        onClick={() => {\r\n          setImage(img.src);\r\n          setEditedImage(img.editedSrc || null);\r\n        }}\r\n      />\r\n    )),\r\n    [images]\r\n  );\r\n\r\n  return (\r\n    <div style={{\r\n      fontFamily: 'Arial, sans-serif',\r\n      margin: 0,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(to right, #4e54c8, #8f94fb)',\r\n      width: '100vw',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        textAlign: 'center',\r\n        width: '80%'\r\n      }}>\r\n        <input type=\"file\" id=\"imageInput\" accept=\"image/*\" onChange={handleImageChange} />\r\n        <div style={{ marginBottom: '20px' }} className=\"image-container\">\r\n          {image && <img ref={uploadedImageRef} src={editedImage || image} alt=\"Uploaded Image\" id=\"uploadedImage\" style={{ maxWidth: '100%', maxHeight: '80vh' }} />}\r\n        </div>\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }} className=\"controls\">\r\n          <button className=\"button\" onClick={convertToBlackAndWhite}>Preto e Branco</button>\r\n          <button className=\"button\" onClick={rotateImage}>Girar</button>\r\n          <button className=\"button\" onClick={compressImage}>Comprimir</button>\r\n          <button className=\"button\" onClick={convertToBitmap}>Bitmap</button>\r\n          <button className=\"button\" onClick={handleStoreImage}>Salvar Imagem</button>\r\n          <button className=\"button\" onClick={mirrorImage}>Espelhar</button>\r\n          <button className=\"button\" onClick={handleBlurImage}>Borrar</button>\r\n          <button className=\"button\" onClick={handleUnblurImage}>Desborrar</button>\r\n          <button className=\"button\" onClick={handleDownloadImage}>Download</button>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center' }}>\r\n          {imageList}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}