{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.silva\\\\photoTOP-master---refatorado\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [editedImage, setEditedImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const [imageSize, setImageSize] = useState(null);\n  const [uploadedImageResolution, setUploadedImageResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  const uploadedImageRef = useRef(null);\n  const [blurStep, setBlurStep] = useState(0);\n  const [prevBlurSteps, setPrevBlurSteps] = useState([]);\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState(false);\n  const [compressedImage, setCompressedImage] = useState(null);\n  const [prevBitmapImage, setPrevBitmapImage] = useState(null);\n  const [customResolution, setCustomResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const updateImageSize = () => {\n      if (uploadedImageRef.current) {\n        const {\n          width,\n          height\n        } = uploadedImageRef.current;\n        setImageSize({\n          width,\n          height\n        });\n      }\n    };\n    updateImageSize();\n    window.addEventListener('resize', updateImageSize);\n    return () => {\n      window.removeEventListener('resize', updateImageSize);\n    };\n  }, [editedImage, image]);\n  useEffect(() => {\n    if (uploadedImageRef.current && image) {\n      const img = new Image();\n      img.onload = () => {\n        setUploadedImageResolution({\n          width: img.width,\n          height: img.height\n        });\n      };\n      img.src = image;\n    }\n  }, [image]);\n  const handleImageChange = e => {\n    const file = e.target.files && e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (typeof reader.result === 'string') {\n        setImage(reader.result);\n        setOriginalImage(reader.result);\n      }\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const convertToBlackAndWhite = () => {\n    if (uploadedImageRef.current) {\n      if (isBlackAndWhite) {\n        setEditedImage(originalImage);\n        uploadedImageRef.current.src = originalImage;\n      } else {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageRef.current.naturalWidth;\n        canvas.height = uploadedImageRef.current.naturalHeight;\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg;\n          data[i + 1] = avg;\n          data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n      setIsBlackAndWhite(!isBlackAndWhite);\n    }\n  };\n  const rotateImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.naturalHeight;\n      canvas.height = uploadedImageRef.current.naturalWidth;\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate(Math.PI / 2);\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.naturalWidth / 2, -uploadedImageRef.current.naturalHeight / 2);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const compressImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.naturalWidth / 2;\n      canvas.height = uploadedImageRef.current.naturalHeight / 2;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n      const editedSrc = canvas.toDataURL();\n      setCompressedImage(editedSrc);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const decompressImage = () => {\n    if (uploadedImageRef.current && compressedImage) {\n      uploadedImageRef.current.src = originalImage;\n      setEditedImage(originalImage);\n      setCompressedImage(null);\n    }\n  };\n  const convertToBitmap = () => {\n    if (uploadedImageRef.current) {\n      if (prevBitmapImage) {\n        setEditedImage(originalImage);\n        uploadedImageRef.current.src = originalImage;\n        setPrevBitmapImage(null);\n      } else {\n        setPrevBitmapImage(editedImage || originalImage);\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageRef.current.naturalWidth;\n        canvas.height = uploadedImageRef.current.naturalHeight;\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg < 128 ? 0 : 255;\n          data[i + 1] = avg < 128 ? 0 : 255;\n          data[i + 2] = avg < 128 ? 0 : 255;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n    }\n  };\n  const handleStoreImage = () => {\n    if (uploadedImageRef.current && image) {\n      setImages(prevImages => [...prevImages, {\n        src: image,\n        editedSrc: editedImage\n      }]);\n      setImage(null);\n      setEditedImage(null);\n    }\n  };\n  const mirrorImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.naturalWidth;\n      canvas.height = uploadedImageRef.current.naturalHeight;\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const blurOrSharpenImage = amount => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.naturalWidth;\n      canvas.height = uploadedImageRef.current.naturalHeight;\n      ctx.filter = `blur(${amount}px)`;\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const handleBlurImage = () => {\n    if (uploadedImageRef.current) {\n      blurOrSharpenImage(3);\n      setBlurStep(prevStep => prevStep + 1);\n    }\n  };\n  const handleUnblurImage = () => {\n    if (blurStep > 0) {\n      setBlurStep(prevStep => prevStep - 1);\n      const prevImage = prevBlurSteps.pop();\n      if (prevImage) {\n        setEditedImage(prevImage);\n        uploadedImageRef.current.src = prevImage;\n      }\n    } else {\n      setEditedImage(originalImage);\n      uploadedImageRef.current.src = originalImage;\n    }\n  };\n  const handleResolutionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCustomResolution(prev => ({\n      ...prev,\n      [name]: parseInt(value)\n    }));\n  };\n  const handleApplyResolution = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = customResolution.width;\n      canvas.height = customResolution.height;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const handleDownloadImage = () => {\n    if (uploadedImageRef.current) {\n      const link = document.createElement('a');\n      link.href = uploadedImageRef.current.src;\n      link.download = 'edited-image.png';\n      link.click();\n    }\n  };\n  const handleReset = () => {\n    setImage(null);\n    setEditedImage(null);\n    setOriginalImage(null);\n    setPrevBitmapImage(null);\n    setBlurStep(0);\n    setPrevBlurSteps([]);\n    setCompressedImage(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Editor de Imagem\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-upload-container\",\n      children: image ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"image-preview\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: editedImage || image,\n          alt: \"Uploaded\",\n          className: \"uploaded-image\",\n          ref: uploadedImageRef,\n          onClick: e => {\n            if (e.target === uploadedImageRef.current) {\n              setImage(null);\n              setEditedImage(null);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, this), imageSize && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-resolution\",\n          children: [\"Resolu\\xE7\\xE3o: \", imageSize.width, \"x\", imageSize.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: convertToBlackAndWhite,\n            children: isBlackAndWhite ? 'Reverter P&B' : 'P&B'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: rotateImage,\n            children: \"Rotacionar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: mirrorImage,\n            children: \"Espelhar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleBlurImage,\n            children: \"Borrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUnblurImage,\n            children: \"Desfazer Borr\\xE3o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: compressImage,\n            children: \"Comprimir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: decompressImage,\n            children: \"Descomprimir\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: convertToBitmap,\n            children: prevBitmapImage ? 'Reverter Bitmap' : 'Bitmap'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"resolution-inputs\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"width\",\n              value: customResolution.width,\n              onChange: handleResolutionChange,\n              placeholder: \"Largura\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"height\",\n              value: customResolution.height,\n              onChange: handleResolutionChange,\n              placeholder: \"Altura\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleApplyResolution,\n              children: \"Aplicar Resolu\\xE7\\xE3o\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleStoreImage,\n          children: \"Salvar Imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDownloadImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleReset,\n          children: \"Resetar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"image-upload-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleImageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-upload-placeholder\",\n          children: \"Clique aqui para adicionar uma imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"saved-images\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Imagens Salvas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"saved-images-grid\",\n        children: images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n          src: img.editedSrc || img.src,\n          alt: `Saved ${index}`,\n          className: \"saved-image\",\n          onClick: () => {\n            setImage(img.src);\n            setEditedImage(img.editedSrc || img.src);\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qV2200F83sBhFeGNzxc9eNRWc80=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","App","_s","image","setImage","images","setImages","editedImage","setEditedImage","originalImage","setOriginalImage","imageSize","setImageSize","uploadedImageResolution","setUploadedImageResolution","width","height","uploadedImageRef","blurStep","setBlurStep","prevBlurSteps","setPrevBlurSteps","isBlackAndWhite","setIsBlackAndWhite","compressedImage","setCompressedImage","prevBitmapImage","setPrevBitmapImage","customResolution","setCustomResolution","updateImageSize","current","window","addEventListener","removeEventListener","img","Image","onload","src","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","readAsDataURL","convertToBlackAndWhite","canvas","document","createElement","ctx","getContext","naturalWidth","naturalHeight","drawImage","imageData","getImageData","data","i","length","avg","putImageData","editedSrc","toDataURL","rotateImage","translate","rotate","Math","PI","compressImage","decompressImage","convertToBitmap","handleStoreImage","prevImages","mirrorImage","scale","blurOrSharpenImage","amount","filter","prevSteps","handleBlurImage","prevStep","handleUnblurImage","prevImage","pop","handleResolutionChange","name","value","prev","parseInt","handleApplyResolution","handleDownloadImage","link","href","download","click","handleReset","className","children","fileName","_jsxFileName","lineNumber","columnNumber","alt","ref","onClick","type","onChange","placeholder","accept","map","index","_c","$RefreshReg$"],"sources":["C:/Users/lucas.silva/photoTOP-master---refatorado/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, useRef, useMemo, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [images, setImages] = useState<{ src: string; editedSrc?: string | null }[]>([]);\r\n  const [editedImage, setEditedImage] = useState<string | null>(null);\r\n  const [originalImage, setOriginalImage] = useState<string | null>(null);\r\n  const [imageSize, setImageSize] = useState<{ width: number; height: number } | null>(null);\r\n  const [uploadedImageResolution, setUploadedImageResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n  const uploadedImageRef = useRef<HTMLImageElement>(null);\r\n  const [blurStep, setBlurStep] = useState<number>(0);\r\n  const [prevBlurSteps, setPrevBlurSteps] = useState<string[]>([]);\r\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState<boolean>(false);\r\n  const [compressedImage, setCompressedImage] = useState<string | null>(null);\r\n  const [prevBitmapImage, setPrevBitmapImage] = useState<string | null>(null);\r\n  const [customResolution, setCustomResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n\r\n  useEffect(() => {\r\n    const updateImageSize = () => {\r\n      if (uploadedImageRef.current) {\r\n        const { width, height } = uploadedImageRef.current;\r\n        setImageSize({ width, height });\r\n      }\r\n    };\r\n\r\n    updateImageSize();\r\n    window.addEventListener('resize', updateImageSize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateImageSize);\r\n    };\r\n  }, [editedImage, image]);\r\n\r\n  useEffect(() => {\r\n    if (uploadedImageRef.current && image) {\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        setUploadedImageResolution({ width: img.width, height: img.height });\r\n      };\r\n      img.src = image;\r\n    }\r\n  }, [image]);\r\n\r\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      if (typeof reader.result === 'string') {\r\n        setImage(reader.result);\r\n        setOriginalImage(reader.result);\r\n      }\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const convertToBlackAndWhite = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (isBlackAndWhite) {\r\n        setEditedImage(originalImage);\r\n        uploadedImageRef.current.src = originalImage!;\r\n      } else {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageRef.current.naturalWidth;\r\n        canvas.height = uploadedImageRef.current.naturalHeight;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg;\r\n          data[i + 1] = avg;\r\n          data[i + 2] = avg;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n      setIsBlackAndWhite(!isBlackAndWhite);\r\n    }\r\n  };\r\n\r\n  const rotateImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.naturalHeight;\r\n      canvas.height = uploadedImageRef.current.naturalWidth;\r\n      ctx.translate(canvas.width / 2, canvas.height / 2);\r\n      ctx.rotate(Math.PI / 2);\r\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.naturalWidth / 2, -uploadedImageRef.current.naturalHeight / 2);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const compressImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.naturalWidth / 2;\r\n      canvas.height = uploadedImageRef.current.naturalHeight / 2;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setCompressedImage(editedSrc);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const decompressImage = () => {\r\n    if (uploadedImageRef.current && compressedImage) {\r\n      uploadedImageRef.current.src = originalImage!;\r\n      setEditedImage(originalImage);\r\n      setCompressedImage(null);\r\n    }\r\n  };\r\n\r\n  const convertToBitmap = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (prevBitmapImage) {\r\n        setEditedImage(originalImage);\r\n        uploadedImageRef.current.src = originalImage!;\r\n        setPrevBitmapImage(null);\r\n      } else {\r\n        setPrevBitmapImage(editedImage || originalImage);\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageRef.current.naturalWidth;\r\n        canvas.height = uploadedImageRef.current.naturalHeight;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg < 128 ? 0 : 255;\r\n          data[i + 1] = avg < 128 ? 0 : 255;\r\n          data[i + 2] = avg < 128 ? 0 : 255;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStoreImage = () => {\r\n    if (uploadedImageRef.current && image) {\r\n      setImages(prevImages => [...prevImages, { src: image, editedSrc: editedImage }]);\r\n      setImage(null);\r\n      setEditedImage(null);\r\n    }\r\n  };\r\n\r\n  const mirrorImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.naturalWidth;\r\n      canvas.height = uploadedImageRef.current.naturalHeight;\r\n      ctx.translate(canvas.width, 0);\r\n      ctx.scale(-1, 1);\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const blurOrSharpenImage = (amount: number) => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.naturalWidth;\r\n      canvas.height = uploadedImageRef.current.naturalHeight;\r\n      ctx.filter = `blur(${amount}px)`;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const handleBlurImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      blurOrSharpenImage(3);\r\n      setBlurStep(prevStep => prevStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleUnblurImage = () => {\r\n    if (blurStep > 0) {\r\n      setBlurStep(prevStep => prevStep - 1);\r\n      const prevImage = prevBlurSteps.pop();\r\n      if (prevImage) {\r\n        setEditedImage(prevImage);\r\n        uploadedImageRef.current!.src = prevImage;\r\n      }\r\n    } else {\r\n      setEditedImage(originalImage);\r\n      uploadedImageRef.current!.src = originalImage!;\r\n    }\r\n  };\r\n\r\n  const handleResolutionChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setCustomResolution(prev => ({ ...prev, [name]: parseInt(value) }));\r\n  };\r\n\r\n  const handleApplyResolution = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = customResolution.width;\r\n      canvas.height = customResolution.height;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const handleDownloadImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const link = document.createElement('a');\r\n      link.href = uploadedImageRef.current.src;\r\n      link.download = 'edited-image.png';\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setImage(null);\r\n    setEditedImage(null);\r\n    setOriginalImage(null);\r\n    setPrevBitmapImage(null);\r\n    setBlurStep(0);\r\n    setPrevBlurSteps([]);\r\n    setCompressedImage(null);\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Editor de Imagem</h1>\r\n      <div className=\"image-upload-container\">\r\n        {image ? (\r\n          <div className=\"image-preview\">\r\n            <img\r\n              src={editedImage || image}\r\n              alt=\"Uploaded\"\r\n              className=\"uploaded-image\"\r\n              ref={uploadedImageRef}\r\n              onClick={(e) => {\r\n                if (e.target === uploadedImageRef.current) {\r\n                  setImage(null);\r\n                  setEditedImage(null);\r\n                }\r\n              }}\r\n            />\r\n            {imageSize && (\r\n              <div className=\"image-resolution\">\r\n                Resolução: {imageSize.width}x{imageSize.height}\r\n              </div>\r\n            )}\r\n            <div className=\"image-controls\">\r\n              <button onClick={convertToBlackAndWhite}>\r\n                {isBlackAndWhite ? 'Reverter P&B' : 'P&B'}\r\n              </button>\r\n              <button onClick={rotateImage}>Rotacionar</button>\r\n              <button onClick={mirrorImage}>Espelhar</button>\r\n              <button onClick={handleBlurImage}>Borrar</button>\r\n              <button onClick={handleUnblurImage}>Desfazer Borrão</button>\r\n              <button onClick={compressImage}>Comprimir</button>\r\n              <button onClick={decompressImage}>Descomprimir</button>\r\n              <button onClick={convertToBitmap}>\r\n                {prevBitmapImage ? 'Reverter Bitmap' : 'Bitmap'}\r\n              </button>\r\n              <div className=\"resolution-inputs\">\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"width\"\r\n                  value={customResolution.width}\r\n                  onChange={handleResolutionChange}\r\n                  placeholder=\"Largura\"\r\n                />\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"height\"\r\n                  value={customResolution.height}\r\n                  onChange={handleResolutionChange}\r\n                  placeholder=\"Altura\"\r\n                />\r\n                <button onClick={handleApplyResolution}>Aplicar Resolução</button>\r\n              </div>\r\n            </div>\r\n            <button onClick={handleStoreImage}>Salvar Imagem</button>\r\n            <button onClick={handleDownloadImage}>Download</button>\r\n            <button onClick={handleReset}>Resetar</button>\r\n          </div>\r\n        ) : (\r\n          <label className=\"image-upload-label\">\r\n            <input type=\"file\" accept=\"image/*\" onChange={handleImageChange} />\r\n            <div className=\"image-upload-placeholder\">\r\n              Clique aqui para adicionar uma imagem\r\n            </div>\r\n          </label>\r\n        )}\r\n      </div>\r\n      <div className=\"saved-images\">\r\n        <h2>Imagens Salvas</h2>\r\n        <div className=\"saved-images-grid\">\r\n          {images.map((img, index) => (\r\n            <img\r\n              key={index}\r\n              src={img.editedSrc || img.src}\r\n              alt={`Saved ${index}`}\r\n              className=\"saved-image\"\r\n              onClick={() => {\r\n                setImage(img.src);\r\n                setEditedImage(img.editedSrc || img.src);\r\n              }}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}