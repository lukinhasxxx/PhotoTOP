{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucas.silva\\\\photoTOP-master---refatorado\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useMemo, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [images, setImages] = useState([]);\n  const [editedImage, setEditedImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const [imageSize, setImageSize] = useState(null);\n  const [uploadedImageResolution, setUploadedImageResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  const uploadedImageRef = useRef(null);\n  const [blurStep, setBlurStep] = useState(0);\n  const [prevBlurSteps, setPrevBlurSteps] = useState([]);\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState(false);\n  const [compressedImage, setCompressedImage] = useState(null);\n  const [prevBitmapImage, setPrevBitmapImage] = useState(null);\n  const [customResolution, setCustomResolution] = useState({\n    width: 0,\n    height: 0\n  });\n  useEffect(() => {\n    const updateImageSize = () => {\n      if (uploadedImageRef.current) {\n        const {\n          width,\n          height\n        } = uploadedImageRef.current;\n        setImageSize({\n          width,\n          height\n        });\n      }\n    };\n    updateImageSize();\n    window.addEventListener('resize', updateImageSize);\n    return () => {\n      window.removeEventListener('resize', updateImageSize);\n    };\n  }, [editedImage, image]);\n  const handleImageChange = e => {\n    const file = e.target.files && e.target.files[0];\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (typeof reader.result === 'string') {\n        setImage(reader.result);\n        setOriginalImage(reader.result);\n        const img = new Image();\n        img.onload = () => {\n          setUploadedImageResolution({\n            width: img.width,\n            height: img.height\n          });\n        };\n        img.src = reader.result;\n      }\n    };\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n  const convertToBlackAndWhite = () => {\n    if (uploadedImageRef.current) {\n      if (isBlackAndWhite) {\n        setEditedImage(originalImage);\n        uploadedImageRef.current.src = originalImage;\n      } else {\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageRef.current.width;\n        canvas.height = uploadedImageRef.current.height;\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg;\n          data[i + 1] = avg;\n          data[i + 2] = avg;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n      setIsBlackAndWhite(!isBlackAndWhite);\n    }\n  };\n  const rotateImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.height;\n      canvas.height = uploadedImageRef.current.width;\n      ctx.translate(canvas.width / 2, canvas.height / 2);\n      ctx.rotate(Math.PI / 2);\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.width / 2, -uploadedImageRef.current.height / 2);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const compressImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width / 2;\n      canvas.height = uploadedImageRef.current.height / 2;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\n      const editedSrc = canvas.toDataURL();\n      setCompressedImage(editedSrc);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const decompressImage = () => {\n    if (uploadedImageRef.current && compressedImage) {\n      uploadedImageRef.current.src = originalImage;\n      setEditedImage(originalImage);\n      setCompressedImage(null);\n    }\n  };\n  const convertToBitmap = () => {\n    if (uploadedImageRef.current) {\n      if (prevBitmapImage) {\n        // Restore the previous state\n        setEditedImage(originalImage); // Restore the original image\n        uploadedImageRef.current.src = originalImage;\n        setPrevBitmapImage(null);\n      } else {\n        // Save the current state and convert to bitmap\n        setPrevBitmapImage(editedImage || originalImage); // Save the current state\n        const canvas = document.createElement('canvas');\n        const ctx = canvas.getContext('2d');\n        canvas.width = uploadedImageRef.current.width;\n        canvas.height = uploadedImageRef.current.height;\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\n        const data = imageData.data;\n        for (let i = 0; i < data.length; i += 4) {\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\n          data[i] = avg < 128 ? 0 : 255;\n          data[i + 1] = avg < 128 ? 0 : 255;\n          data[i + 2] = avg < 128 ? 0 : 255;\n        }\n        ctx.putImageData(imageData, 0, 0);\n        const editedSrc = canvas.toDataURL();\n        setEditedImage(editedSrc);\n        uploadedImageRef.current.src = editedSrc;\n      }\n    }\n  };\n  const handleStoreImage = () => {\n    if (uploadedImageRef.current && image) {\n      setImages(prevImages => [...prevImages, {\n        src: image,\n        editedSrc: editedImage\n      }]);\n      setImage(null);\n      setEditedImage(null);\n    }\n  };\n  const mirrorImage = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.translate(canvas.width, 0);\n      ctx.scale(-1, 1);\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const blurOrSharpenImage = amount => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.filter = `blur(${amount}px)`;\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const editedSrc = canvas.toDataURL();\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  const handleBlurImage = () => {\n    if (uploadedImageRef.current) {\n      blurOrSharpenImage(3);\n      setBlurStep(prevStep => prevStep + 1);\n    }\n  };\n  const handleUnblurImage = () => {\n    if (blurStep > 0) {\n      setBlurStep(prevStep => prevStep - 1);\n      const prevImage = prevBlurSteps.pop();\n      if (prevImage) {\n        setEditedImage(prevImage);\n        uploadedImageRef.current.src = prevImage;\n      }\n    } else {\n      setEditedImage(originalImage);\n      if (originalImage) {\n        uploadedImageRef.current.src = originalImage;\n      }\n    }\n  };\n  const convertToSVG = () => {\n    if (uploadedImageRef.current) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = uploadedImageRef.current.width;\n      canvas.height = uploadedImageRef.current.height;\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\n      const dataUrl = canvas.toDataURL(); // Get data URL of the image\n\n      // Create a new image element to load the data URL\n      const img = new Image();\n      img.onload = () => {\n        const svg = `\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${img.width}\" height=\"${img.height}\">\n            <image href=\"${dataUrl}\" width=\"100%\" height=\"100%\"/>\n          </svg>\n        `;\n\n        // Download the SVG\n        const blob = new Blob([svg], {\n          type: 'image/svg+xml'\n        });\n        const url = URL.createObjectURL(blob);\n        const downloadLink = document.createElement('a');\n        downloadLink.href = url;\n        downloadLink.download = 'image.svg';\n        document.body.appendChild(downloadLink);\n        downloadLink.click();\n        document.body.removeChild(downloadLink);\n      };\n      img.src = dataUrl;\n    }\n  };\n  const imageList = useMemo(() => images.map((img, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n    src: img.editedSrc || img.src,\n    alt: `Uploaded Image ${index}`,\n    style: {\n      width: '100px',\n      height: 'auto',\n      margin: '5px',\n      cursor: 'pointer'\n    },\n    onClick: () => {\n      setImage(img.src);\n      setEditedImage(img.editedSrc || null);\n    }\n  }, index, false, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 7\n  }, this)), [images]);\n  const handleDownloadImage = () => {\n    if (editedImage) {\n      const downloadLink = document.createElement('a');\n      downloadLink.href = editedImage;\n      downloadLink.download = 'edited_image.png';\n      document.body.appendChild(downloadLink);\n      downloadLink.click();\n      document.body.removeChild(downloadLink);\n    }\n  };\n  const handleCustomResolutionChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCustomResolution(prevState => ({\n      ...prevState,\n      [name]: parseInt(value, 10)\n    }));\n  };\n  const handleApplyCustomResolution = () => {\n    if (uploadedImageRef.current && customResolution.width > 0 && customResolution.height > 0) {\n      const canvas = document.createElement('canvas');\n      const ctx = canvas.getContext('2d');\n      canvas.width = customResolution.width;\n      canvas.height = customResolution.height;\n      ctx.drawImage(uploadedImageRef.current, 0, 0, customResolution.width, customResolution.height);\n      const editedSrc = canvas.toDataURL();\n      setEditedImage(editedSrc);\n      uploadedImageRef.current.src = editedSrc;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      margin: 0,\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      minHeight: '100vh',\n      background: 'linear-gradient(to right, #4e54c8, #8f94fb)',\n      width: '100vw',\n      overflow: 'hidden'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\n        padding: '20px',\n        borderRadius: '10px',\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n        textAlign: 'center',\n        width: '80%'\n      },\n      children: [!image && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: '24px',\n          color: '#333',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"imageInput\",\n          style: {\n            cursor: 'pointer',\n            color: '#4e54c8'\n          },\n          children: \"Clique aqui para adicionar uma imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        id: \"imageInput\",\n        accept: \"image/*\",\n        onChange: handleImageChange,\n        style: {\n          display: 'none'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: '20px',\n          position: 'relative'\n        },\n        className: \"image-container\",\n        children: image && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            ref: uploadedImageRef,\n            src: editedImage || image,\n            alt: \"Uploaded Image\",\n            id: \"uploadedImage\",\n            style: {\n              maxWidth: '100%',\n              borderRadius: '10px',\n              boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\n              transition: 'all 0.3s ease'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '10px',\n              left: '10px',\n              padding: '5px 10px',\n              backgroundColor: 'rgba(0, 0, 0, 0.7)',\n              color: '#fff',\n              borderRadius: '5px',\n              fontSize: '14px'\n            },\n            children: [uploadedImageResolution.width, \" x \", uploadedImageResolution.height]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), image && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          flexWrap: 'wrap',\n          marginBottom: '20px',\n          padding: '0 20px'\n        },\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: convertToBlackAndWhite,\n          children: \"Preto e Branco\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: rotateImage,\n          children: \"Girar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: compressImage,\n          children: \"Comprimir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: decompressImage,\n          children: \"Descomprimir\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: convertToBitmap,\n          children: \"Bitmap\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleStoreImage,\n          children: \"Adicionar nova imagem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: mirrorImage,\n          children: \"Espelhar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleBlurImage,\n          children: \"Borrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleUnblurImage,\n          children: \"Desborrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: handleDownloadImage,\n          children: \"Download\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"button\",\n          onClick: convertToSVG,\n          children: \"Converter e baixar em SVG\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'center',\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginRight: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"width\",\n            value: customResolution.width,\n            onChange: handleCustomResolutionChange,\n            placeholder: \"Largura\",\n            style: {\n              width: '80px',\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"height\",\n            value: customResolution.height,\n            onChange: handleCustomResolutionChange,\n            placeholder: \"Altura\",\n            style: {\n              width: '80px',\n              marginRight: '10px'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button\",\n            onClick: handleApplyCustomResolution,\n            children: \"Aplicar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexWrap: 'wrap',\n          justifyContent: 'center',\n          gap: '5px'\n        },\n        children: imageList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 294,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"s68OkSh/cQnH9q08Ii522eCdzrs=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useMemo","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","image","setImage","images","setImages","editedImage","setEditedImage","originalImage","setOriginalImage","imageSize","setImageSize","uploadedImageResolution","setUploadedImageResolution","width","height","uploadedImageRef","blurStep","setBlurStep","prevBlurSteps","setPrevBlurSteps","isBlackAndWhite","setIsBlackAndWhite","compressedImage","setCompressedImage","prevBitmapImage","setPrevBitmapImage","customResolution","setCustomResolution","updateImageSize","current","window","addEventListener","removeEventListener","handleImageChange","e","file","target","files","reader","FileReader","onloadend","result","img","Image","onload","src","readAsDataURL","convertToBlackAndWhite","canvas","document","createElement","ctx","getContext","drawImage","imageData","getImageData","data","i","length","avg","putImageData","editedSrc","toDataURL","rotateImage","translate","rotate","Math","PI","compressImage","decompressImage","convertToBitmap","handleStoreImage","prevImages","mirrorImage","scale","blurOrSharpenImage","amount","filter","prevSteps","handleBlurImage","prevStep","handleUnblurImage","prevImage","pop","convertToSVG","dataUrl","svg","blob","Blob","type","url","URL","createObjectURL","downloadLink","href","download","body","appendChild","click","removeChild","imageList","map","index","alt","style","margin","cursor","onClick","fileName","_jsxFileName","lineNumber","columnNumber","handleDownloadImage","handleCustomResolutionChange","name","value","prevState","parseInt","handleApplyCustomResolution","fontFamily","display","justifyContent","alignItems","minHeight","background","overflow","children","backgroundColor","padding","borderRadius","boxShadow","textAlign","fontSize","color","marginBottom","htmlFor","id","accept","onChange","position","className","ref","maxWidth","transition","top","left","flexWrap","marginRight","placeholder","gap","_c","$RefreshReg$"],"sources":["C:/Users/lucas.silva/photoTOP-master---refatorado/src/App.tsx"],"sourcesContent":["import React, { useState, ChangeEvent, useRef, useMemo, useEffect } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [image, setImage] = useState<string | null>(null);\r\n  const [images, setImages] = useState<{ src: string; editedSrc?: string | null }[]>([]);\r\n  const [editedImage, setEditedImage] = useState<string | null>(null);\r\n  const [originalImage, setOriginalImage] = useState<string | null>(null);\r\n  const [imageSize, setImageSize] = useState<{ width: number; height: number } | null>(null);\r\n  const [uploadedImageResolution, setUploadedImageResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n  const uploadedImageRef = useRef<HTMLImageElement>(null);\r\n  const [blurStep, setBlurStep] = useState<number>(0);\r\n  const [prevBlurSteps, setPrevBlurSteps] = useState<string[]>([]);\r\n  const [isBlackAndWhite, setIsBlackAndWhite] = useState<boolean>(false);\r\n  const [compressedImage, setCompressedImage] = useState<string | null>(null);\r\n  const [prevBitmapImage, setPrevBitmapImage] = useState<string | null>(null);\r\n  const [customResolution, setCustomResolution] = useState<{ width: number; height: number }>({ width: 0, height: 0 });\r\n\r\n  useEffect(() => {\r\n    const updateImageSize = () => {\r\n      if (uploadedImageRef.current) {\r\n        const { width, height } = uploadedImageRef.current;\r\n        setImageSize({ width, height });\r\n      }\r\n    };\r\n\r\n    updateImageSize();\r\n    window.addEventListener('resize', updateImageSize);\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', updateImageSize);\r\n    };\r\n  }, [editedImage, image]);\r\n\r\n  const handleImageChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files && e.target.files[0];\r\n    const reader = new FileReader();\r\n\r\n    reader.onloadend = () => {\r\n      if (typeof reader.result === 'string') {\r\n        setImage(reader.result);\r\n        setOriginalImage(reader.result);\r\n        const img = new Image();\r\n        img.onload = () => {\r\n          setUploadedImageResolution({ width: img.width, height: img.height });\r\n        };\r\n        img.src = reader.result;\r\n      }\r\n    };\r\n\r\n    if (file) {\r\n      reader.readAsDataURL(file);\r\n    }\r\n  };\r\n\r\n  const convertToBlackAndWhite = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (isBlackAndWhite) {\r\n        setEditedImage(originalImage);\r\n        uploadedImageRef.current.src = originalImage!;\r\n      } else {\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageRef.current.width;\r\n        canvas.height = uploadedImageRef.current.height;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg;\r\n          data[i + 1] = avg;\r\n          data[i + 2] = avg;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n      setIsBlackAndWhite(!isBlackAndWhite);\r\n    }\r\n  };\r\n\r\n  const rotateImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.height;\r\n      canvas.height = uploadedImageRef.current.width;\r\n      ctx.translate(canvas.width / 2, canvas.height / 2);\r\n      ctx.rotate(Math.PI / 2);\r\n      ctx.drawImage(uploadedImageRef.current, -uploadedImageRef.current.width / 2, -uploadedImageRef.current.height / 2);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const compressImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width / 2;\r\n      canvas.height = uploadedImageRef.current.height / 2;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, canvas.width, canvas.height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setCompressedImage(editedSrc);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const decompressImage = () => {\r\n    if (uploadedImageRef.current && compressedImage) {\r\n      uploadedImageRef.current.src = originalImage!;\r\n      setEditedImage(originalImage);\r\n      setCompressedImage(null);\r\n    }\r\n  };\r\n\r\n  const convertToBitmap = () => {\r\n    if (uploadedImageRef.current) {\r\n      if (prevBitmapImage) {\r\n        // Restore the previous state\r\n        setEditedImage(originalImage); // Restore the original image\r\n        uploadedImageRef.current.src = originalImage!;\r\n        setPrevBitmapImage(null);\r\n      } else {\r\n        // Save the current state and convert to bitmap\r\n        setPrevBitmapImage(editedImage || originalImage); // Save the current state\r\n        const canvas = document.createElement('canvas');\r\n        const ctx = canvas.getContext('2d')!!;\r\n        canvas.width = uploadedImageRef.current.width;\r\n        canvas.height = uploadedImageRef.current.height;\r\n        ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);\r\n        const data = imageData.data;\r\n        for (let i = 0; i < data.length; i += 4) {\r\n          const avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n          data[i] = avg < 128 ? 0 : 255;\r\n          data[i + 1] = avg < 128 ? 0 : 255;\r\n          data[i + 2] = avg < 128 ? 0 : 255;\r\n        }\r\n        ctx.putImageData(imageData, 0, 0);\r\n        const editedSrc = canvas.toDataURL();\r\n        setEditedImage(editedSrc);\r\n        uploadedImageRef.current.src = editedSrc;\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleStoreImage = () => {\r\n    if (uploadedImageRef.current && image) {\r\n      setImages(prevImages => [...prevImages, { src: image, editedSrc: editedImage }]);\r\n      setImage(null);\r\n      setEditedImage(null);\r\n    }\r\n  };\r\n\r\n  const mirrorImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.translate(canvas.width, 0);\r\n      ctx.scale(-1, 1);\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const blurOrSharpenImage = (amount: number) => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.filter = `blur(${amount}px)`;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const editedSrc = canvas.toDataURL();\r\n      setPrevBlurSteps(prevSteps => [...prevSteps, editedSrc]);\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  const handleBlurImage = () => {\r\n    if (uploadedImageRef.current) {\r\n      blurOrSharpenImage(3);\r\n      setBlurStep(prevStep => prevStep + 1);\r\n    }\r\n  };\r\n\r\n  const handleUnblurImage = () => {\r\n    if (blurStep > 0) {\r\n      setBlurStep(prevStep => prevStep - 1);\r\n      const prevImage = prevBlurSteps.pop();\r\n      if (prevImage) {\r\n        setEditedImage(prevImage);\r\n        uploadedImageRef.current!.src = prevImage;\r\n      }\r\n    } else {\r\n      setEditedImage(originalImage);\r\n      if (originalImage) {\r\n        uploadedImageRef.current!.src = originalImage;\r\n      }\r\n    }\r\n  };\r\n\r\n  const convertToSVG = () => {\r\n    if (uploadedImageRef.current) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = uploadedImageRef.current.width;\r\n      canvas.height = uploadedImageRef.current.height;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0);\r\n      const dataUrl = canvas.toDataURL(); // Get data URL of the image\r\n\r\n      // Create a new image element to load the data URL\r\n      const img = new Image();\r\n      img.onload = () => {\r\n        const svg = `\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${img.width}\" height=\"${img.height}\">\r\n            <image href=\"${dataUrl}\" width=\"100%\" height=\"100%\"/>\r\n          </svg>\r\n        `;\r\n\r\n        // Download the SVG\r\n        const blob = new Blob([svg], { type: 'image/svg+xml' });\r\n        const url = URL.createObjectURL(blob);\r\n        const downloadLink = document.createElement('a');\r\n        downloadLink.href = url;\r\n        downloadLink.download = 'image.svg';\r\n        document.body.appendChild(downloadLink);\r\n        downloadLink.click();\r\n        document.body.removeChild(downloadLink);\r\n      };\r\n      img.src = dataUrl;\r\n    }\r\n  };\r\n\r\n  const imageList = useMemo(\r\n    () => images.map((img, index) => (\r\n      <img\r\n        key={index}\r\n        src={img.editedSrc || img.src}\r\n        alt={`Uploaded Image ${index}`}\r\n        style={{ width: '100px', height: 'auto', margin: '5px', cursor: 'pointer' }}\r\n        onClick={() => {\r\n          setImage(img.src);\r\n          setEditedImage(img.editedSrc || null);\r\n        }}\r\n      />\r\n    )),\r\n    [images]\r\n  );\r\n\r\n  const handleDownloadImage = () => {\r\n    if (editedImage) {\r\n      const downloadLink = document.createElement('a');\r\n      downloadLink.href = editedImage;\r\n      downloadLink.download = 'edited_image.png';\r\n      document.body.appendChild(downloadLink);\r\n      downloadLink.click();\r\n      document.body.removeChild(downloadLink);\r\n    }\r\n  };\r\n\r\n  const handleCustomResolutionChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n    const { name, value } = e.target;\r\n    setCustomResolution(prevState => ({\r\n      ...prevState,\r\n      [name]: parseInt(value, 10)\r\n    }));\r\n  };\r\n\r\n  const handleApplyCustomResolution = () => {\r\n    if (uploadedImageRef.current && customResolution.width > 0 && customResolution.height > 0) {\r\n      const canvas = document.createElement('canvas');\r\n      const ctx = canvas.getContext('2d')!!;\r\n      canvas.width = customResolution.width;\r\n      canvas.height = customResolution.height;\r\n      ctx.drawImage(uploadedImageRef.current, 0, 0, customResolution.width, customResolution.height);\r\n      const editedSrc = canvas.toDataURL();\r\n      setEditedImage(editedSrc);\r\n      uploadedImageRef.current.src = editedSrc;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{\r\n      fontFamily: 'Arial, sans-serif',\r\n      margin: 0,\r\n      display: 'flex',\r\n      justifyContent: 'center',\r\n      alignItems: 'center',\r\n      minHeight: '100vh',\r\n      background: 'linear-gradient(to right, #4e54c8, #8f94fb)',\r\n      width: '100vw',\r\n      overflow: 'hidden'\r\n    }}>\r\n      <div style={{\r\n        backgroundColor: 'rgba(255, 255, 255, 0.9)',\r\n        padding: '20px',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n        textAlign: 'center',\r\n        width: '80%'\r\n      }}>\r\n        {!image && (\r\n          <div style={{ fontSize: '24px', color: '#333', marginBottom: '20px' }}>\r\n            <label htmlFor=\"imageInput\" style={{ cursor: 'pointer', color: '#4e54c8' }}>\r\n              Clique aqui para adicionar uma imagem\r\n            </label>\r\n          </div>\r\n        )}\r\n        <input type=\"file\" id=\"imageInput\" accept=\"image/*\" onChange={handleImageChange} style={{ display: 'none' }} />\r\n        <div style={{ marginBottom: '20px', position: 'relative' }} className=\"image-container\">\r\n          {image && (\r\n            <>\r\n              <img\r\n                ref={uploadedImageRef}\r\n                src={editedImage || image}\r\n                alt=\"Uploaded Image\"\r\n                id=\"uploadedImage\"\r\n                style={{\r\n                  maxWidth: '100%',\r\n                  borderRadius: '10px',\r\n                  boxShadow: '0 4px 8px rgba(0, 0, 0, 0.1)',\r\n                  transition: 'all 0.3s ease'\r\n                }}\r\n              />\r\n              <div style={{\r\n                position: 'absolute',\r\n                top: '10px',\r\n                left: '10px',\r\n                padding: '5px 10px',\r\n                backgroundColor: 'rgba(0, 0, 0, 0.7)',\r\n                color: '#fff',\r\n                borderRadius: '5px',\r\n                fontSize: '14px'\r\n              }}>\r\n                {uploadedImageResolution.width} x {uploadedImageResolution.height}\r\n              </div>\r\n            </>\r\n          )}\r\n        </div>\r\n        {image && (\r\n          <div style={{ display: 'flex', justifyContent: 'center', flexWrap: 'wrap', marginBottom: '20px', padding: '0 20px' }} className=\"controls\">\r\n            <button className=\"button\" onClick={convertToBlackAndWhite}>Preto e Branco</button>\r\n            <button className=\"button\" onClick={rotateImage}>Girar</button>\r\n            <button className=\"button\" onClick={compressImage}>Comprimir</button>\r\n            <button className=\"button\" onClick={decompressImage}>Descomprimir</button>\r\n            <button className=\"button\" onClick={convertToBitmap}>Bitmap</button>\r\n            <button className=\"button\" onClick={handleStoreImage}>Adicionar nova imagem</button>\r\n            <button className=\"button\" onClick={mirrorImage}>Espelhar</button>\r\n            <button className=\"button\" onClick={handleBlurImage}>Borrar</button>\r\n            <button className=\"button\" onClick={handleUnblurImage}>Desborrar</button>\r\n            <button className=\"button\" onClick={handleDownloadImage}>Download</button>\r\n            <button className=\"button\" onClick={convertToSVG}>Converter e baixar em SVG</button>\r\n          </div>\r\n        )}\r\n        <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '20px' }}>\r\n          <div style={{ marginRight: '20px' }}>\r\n            <input\r\n              type=\"number\"\r\n              name=\"width\"\r\n              value={customResolution.width}\r\n              onChange={handleCustomResolutionChange}\r\n              placeholder=\"Largura\"\r\n              style={{ width: '80px', marginRight: '10px' }}\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"height\"\r\n              value={customResolution.height}\r\n              onChange={handleCustomResolutionChange}\r\n              placeholder=\"Altura\"\r\n              style={{ width: '80px', marginRight: '10px' }}\r\n            />\r\n            <button className=\"button\" onClick={handleApplyCustomResolution}>Aplicar</button>\r\n          </div>\r\n        </div>\r\n        <div style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'center', gap: '5px' }}>\r\n          {imageList}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}